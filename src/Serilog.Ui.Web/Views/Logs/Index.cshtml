@model LogViewModel
@{
    ViewData["Title"] = "Log List";
    Layout = "~/Views/Shared/_LogLayout.cshtml";
    var levelClass = string.Empty;
    var showingItemsStart = (Model.Page - 1) * Model.Count;
    int showingItemsEnd;
    if (showingItemsStart == 0)
    {
        showingItemsStart = 1;
        showingItemsEnd = 10;
    }
    else
    {
        showingItemsEnd = showingItemsStart + Model.Count;
    }
}
<h1>Log List</h1>
<form method="get" asp-action="Index">
    <div class="row">
        <div class="col-sm-12 col-md-6">
            <div class="table-select" id="logCount">
                <label>
                    Show
                    <select asp-items="@Model.CountSelectListItems" name="count" class="form-control form-control-sm">
                    </select>
                    entries
                </label>
            </div>
        </div>
        <div class="col-sm-12 col-md-6">
            <div class="table-filter">
                <label>Search:<input type="search" class="form-control form-control-sm" placeholder=""></label>
            </div>
        </div>
    </div>

    <table class="table" id="logTable">
        <thead class="thead-dark">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Level</th>
                <th scope="col" style="width: 100px">Date</th>
                <th scope="col">Message</th>
                <th scope="col">Exception</th>
                <th scope="col">Properties</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var log in Model.Logs)
            {
                switch (log.Level)
                {
                    case "Verbose":
                    case "Debug":
                        levelClass = "bg-success";
                        break;
                    case "Information":
                        levelClass = "bg-primary";
                        break;
                    case "Warning":
                        levelClass = "bg-warning";
                        break;
                    case "Error":
                        levelClass = "bg-danger";
                        break;
                }

                <tr>
                    <th scope="row">@log.Id</th>
                    <td class="text-center"><span class="log-level text-white @levelClass">@log.Level</span></td>
                    <td class="text-center">@log.Timestamp</td>
                    <td>
                        <span class="overflow-auto"> @log.Message</span>
                    </td>
                    <td class="text-center">@log.Exception</td>
                    <td class="text-center"><a href="#" title="Click to view">View</a></td>
                </tr>
            }
        </tbody>
    </table>
    <div class="row">
        <div class="col-sm-12 col-md-5">
            <div class="table-paging-info">Showing @showingItemsStart to @showingItemsEnd of @Model.LogCount entries</div>
        </div>
        <div class="col-sm-12 col-md-7">
            <partial name="_Paging" model="Model" />
        </div>
    </div>
</form>